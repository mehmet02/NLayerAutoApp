// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayerAuto.Repository;

#nullable disable

namespace NLayerAuto.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NLayerAuto.Core.Model.Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Cars", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 8, 4, 3, 16, 51, 937, DateTimeKind.Local).AddTicks(1054),
                            Name = "Mercedes"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 8, 4, 3, 16, 51, 937, DateTimeKind.Local).AddTicks(1062),
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 8, 4, 3, 16, 51, 937, DateTimeKind.Local).AddTicks(1063),
                            Name = "AUDI"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 8, 4, 3, 16, 51, 937, DateTimeKind.Local).AddTicks(1064),
                            Name = "Abacus"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 8, 4, 3, 16, 51, 937, DateTimeKind.Local).AddTicks(1064),
                            Name = "Absolute"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 8, 4, 3, 16, 51, 937, DateTimeKind.Local).AddTicks(1065),
                            Name = "Admiral Boats"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2022, 8, 4, 3, 16, 51, 937, DateTimeKind.Local).AddTicks(1066),
                            Name = "MAN"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 8, 4, 3, 16, 51, 937, DateTimeKind.Local).AddTicks(1066),
                            Name = "DAF"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 8, 4, 3, 16, 51, 937, DateTimeKind.Local).AddTicks(1067),
                            Name = "ISUZU"
                        });
                });

            modelBuilder.Entity("NLayerAuto.Core.Model.CarsFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarsId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Headlights")
                        .HasColumnType("bit");

                    b.Property<int>("Wheels")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarsId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarsId = 1,
                            Color = "Black",
                            Headlights = true,
                            Wheels = 4
                        },
                        new
                        {
                            Id = 2,
                            CarsId = 2,
                            Color = "White",
                            Headlights = true,
                            Wheels = 0
                        },
                        new
                        {
                            Id = 3,
                            CarsId = 3,
                            Color = "Blue",
                            Headlights = true,
                            Wheels = 4
                        });
                });

            modelBuilder.Entity("NLayerAuto.Core.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Car"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Boats"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Buses"
                        });
                });

            modelBuilder.Entity("NLayerAuto.Core.Model.Cars", b =>
                {
                    b.HasOne("NLayerAuto.Core.Model.Category", "Category")
                        .WithMany("Cars")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NLayerAuto.Core.Model.CarsFeature", b =>
                {
                    b.HasOne("NLayerAuto.Core.Model.Cars", "Cars")
                        .WithOne("CarsFeature")
                        .HasForeignKey("NLayerAuto.Core.Model.CarsFeature", "CarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cars");
                });

            modelBuilder.Entity("NLayerAuto.Core.Model.Cars", b =>
                {
                    b.Navigation("CarsFeature");
                });

            modelBuilder.Entity("NLayerAuto.Core.Model.Category", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
